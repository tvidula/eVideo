{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\eVideoPrime_Final\\\\src\\\\admin\\\\containers\\\\MovieBanner.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, ErrorMessage } from \"formik\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport * as Yup from \"yup\";\nimport FileService from '../../services/FileService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImagePreview(props) {\n  _s();\n\n  const [imgSrc, setImage] = useState('');\n  useEffect(() => {\n    if (props.file != '') {\n      let reader = new FileReader();\n      reader.readAsDataURL(props.file);\n\n      reader.onloadend = () => {\n        setImage(reader.result);\n      };\n    }\n  }, [props]);\n  return imgSrc != '' && /*#__PURE__*/_jsxDEV(\"img\", {\n    src: imgSrc,\n    width: props.width\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this);\n}\n\n_s(ImagePreview, \"+Y/PTFZm74whkecriNUoYyuz1qo=\");\n\n_c = ImagePreview;\nexport default function MovieBanner() {\n  _s2();\n\n  const {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-sm-9\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Thumbnail and Banner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        id: 0,\n        thumbnail: '',\n        banner: ''\n      },\n      validationSchema: Yup.object({\n        thumbnail: Yup.mixed().required('Please Upload Thumbnail'),\n        banner: Yup.mixed().required('Please Upload Banner')\n      }),\n      onSubmit: values => {\n        const formData = new FormData();\n        formData.append('id', id);\n        formData.append('file', values.thumbnail, values.thumbnail.name);\n        formData.append('file', values.banner, values.banner.name);\n        FileService.UploadFiles(formData).then(res => {\n          console.log(res);\n\n          if (res.status == 200) {\n            // simulate async api call with set timeout\n            setTimeout(() => navigate('/admin/movies'), 1000);\n          }\n        });\n      },\n      children: _ref => {\n        let {\n          values,\n          setFieldValue\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Thumbnail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"thumbnail\",\n              name: \"thumbnail\",\n              type: \"file\",\n              onChange: event => {\n                setFieldValue(\"thumbnail\", event.currentTarget.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ImagePreview, {\n              file: values.thumbnail,\n              width: \"200px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"label\",\n              className: \"text-danger\",\n              name: \"thumbnail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Banner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"banner\",\n              name: \"banner\",\n              type: \"file\",\n              onChange: event => {\n                setFieldValue(\"banner\", event.currentTarget.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ImagePreview, {\n              file: values.banner,\n              width: \"500px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"label\",\n              className: \"text-danger\",\n              name: \"banner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Save\",\n              className: \"btn btn-primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(MovieBanner, \"1JEIvPRIKJKnaO45RHf/GR9vcR4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c2 = MovieBanner;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImagePreview\");\n$RefreshReg$(_c2, \"MovieBanner\");","map":{"version":3,"sources":["C:/React/eVideoPrime_Final/src/admin/containers/MovieBanner.js"],"names":["React","useState","useEffect","Formik","Form","ErrorMessage","useNavigate","useParams","Yup","FileService","ImagePreview","props","imgSrc","setImage","file","reader","FileReader","readAsDataURL","onloadend","result","width","MovieBanner","id","navigate","thumbnail","banner","object","mixed","required","values","formData","FormData","append","name","UploadFiles","then","res","console","log","status","setTimeout","setFieldValue","event","currentTarget","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Formik, Form, ErrorMessage } from \"formik\";\n\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport * as Yup from \"yup\";\nimport FileService from '../../services/FileService';\n\nfunction ImagePreview(props) {\n    const [imgSrc, setImage] = useState('');\n    useEffect(() => {\n        if (props.file != '') {\n            let reader = new FileReader();\n            reader.readAsDataURL(props.file);\n            reader.onloadend = () => {\n                setImage(reader.result);\n            };\n        }\n    }, [props])\n    return (\n        imgSrc != '' && <img src={imgSrc} width={props.width} />\n    );\n}\n\nexport default function MovieBanner() {\n    const { id } = useParams();\n    let navigate = useNavigate();\n    return (\n        <div className=\"col-sm-9\">\n            <h1>Upload Thumbnail and Banner</h1>\n            <Formik\n                initialValues={{\n                    id: 0,\n                    thumbnail: '',\n                    banner: ''\n                }}\n                validationSchema={\n                    Yup.object({\n                        thumbnail: Yup.mixed().required('Please Upload Thumbnail'),\n                        banner: Yup.mixed().required('Please Upload Banner')\n                    })\n                }\n                onSubmit={(values) => {\n                    const formData = new FormData();\n\n                    formData.append('id', id);\n                    formData.append('file', values.thumbnail, values.thumbnail.name);\n                    formData.append('file', values.banner, values.banner.name);\n\n                    FileService.UploadFiles(formData).then(res => {\n                        console.log(res);\n                        if (res.status == 200) {\n                            // simulate async api call with set timeout\n                            setTimeout(() => navigate('/admin/movies'), 1000);\n                        }\n                    });\n                }}>\n                {({ values, setFieldValue }) => (\n                    <Form>\n                        <div className=\"mb-3\">\n                            <label>Thumbnail</label>\n                            <input id=\"thumbnail\" name=\"thumbnail\" type=\"file\" onChange={(event) => {\n                                setFieldValue(\"thumbnail\", event.currentTarget.files[0]);\n                            }} />\n                            <ImagePreview file={values.thumbnail} width=\"200px\"/>\n                            <ErrorMessage component=\"label\" className=\"text-danger\" name=\"thumbnail\" />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label>Banner</label>\n                            <input id=\"banner\" name=\"banner\" type=\"file\" onChange={(event) => {\n                                setFieldValue(\"banner\", event.currentTarget.files[0]);\n                            }} />\n                            <ImagePreview file={values.banner} width=\"500px\" />\n                            <ErrorMessage component=\"label\" className=\"text-danger\" name=\"banner\" />\n                        </div>\n                        <div className=\"mb-3\">\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}