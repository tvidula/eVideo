{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\eVideoPrime_Final\\\\src\\\\containers\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { AUTH_ID } from '../helpers/constant';\nimport * as Yup from \"yup\";\nimport AuthService from \"../services/AuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  let navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const returnUrl = searchParams.get('return');\n  const initialValues = {\n    username: '',\n    password: ''\n  };\n  const schema = Yup.object({\n    username: Yup.string().required('Please Enter Username'),\n    password: Yup.string().required('Please Enter Password')\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-sm-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: schema,\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        AuthService.Login(values).then(res => {\n          if (res.status === 200 && res.data) {\n            const user = res.data;\n            localStorage.setItem(AUTH_ID, JSON.stringify(user));\n            if (returnUrl != null) navigate(`/${returnUrl}`);\n\n            if (user.roles.indexOf('User') > -1) {\n              navigate('/user');\n            } else if (user.roles.indexOf('Admin') > -1) {\n              navigate('/admin');\n            }\n          } else {\n            setMessage(\"Username or Password doesn't Exist\");\n          }\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger mb-2\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"username\",\n            type: \"text\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"label\",\n            className: \"text-danger\",\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"password\",\n            type: \"password\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"label\",\n            className: \"text-danger\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Login\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"sPpEXLo3QrVhhnMBDk0ctsxJHfU=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/React/eVideoPrime_Final/src/containers/Login.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","useNavigate","useSearchParams","AUTH_ID","Yup","AuthService","Login","message","setMessage","navigate","searchParams","returnUrl","get","initialValues","username","password","schema","object","string","required","values","setSubmitting","then","res","status","data","user","localStorage","setItem","JSON","stringify","roles","indexOf"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { AUTH_ID } from '../helpers/constant';\n\nimport * as Yup from \"yup\";\nimport AuthService from \"../services/AuthService\";\n\nexport default function Login() {\n    const [message, setMessage] = useState('');\n    let navigate = useNavigate();\n    const [searchParams] = useSearchParams();\n    const returnUrl = searchParams.get('return');\n\n    const initialValues = { username: '', password: '' };\n    const schema = Yup.object({\n        username: Yup.string().required('Please Enter Username'),\n        password: Yup.string().required('Please Enter Password'),\n      });\n\n    return (\n        <div className=\"col-sm-5\">\n            <h1>Login</h1>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={schema}\n                onSubmit={(values, { setSubmitting }) => {\n                    AuthService.Login(values).then(res => {\n                        if (res.status === 200 && res.data) {\n                            const user = res.data;\n                            localStorage.setItem(AUTH_ID, JSON.stringify(user));\n\n                            if (returnUrl != null)\n                                navigate(`/${returnUrl}`);\n\n                            if (user.roles.indexOf('User') > -1) {\n                                navigate('/user');\n                            }\n                            else if (user.roles.indexOf('Admin') > -1) {\n                                navigate('/admin');\n                            }\n                        }\n                        else {\n                                setMessage(\"Username or Password doesn't Exist\");\n                              }\n                    });\n                }}>\n                <Form>\n                    <div className='text-danger mb-2'>\n                        {message}\n                    </div>\n                    <div className=\"mb-3\">\n                        <label>Email</label>\n                        <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                        <ErrorMessage component=\"label\" className=\"text-danger\" name=\"username\" />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label>Password</label>\n                        <Field name=\"password\" type=\"password\" className=\"form-control\" />\n                        <ErrorMessage component=\"label\" className=\"text-danger\" name=\"password\" />\n                    </div>\n                    <div className=\"mb-3\">\n                        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\n                    </div>\n                </Form>\n            </Formik>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}