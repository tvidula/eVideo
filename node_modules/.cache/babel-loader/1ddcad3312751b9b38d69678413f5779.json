{"ast":null,"code":"import AES from 'crypto-js/aes';\nimport ENC_UTF8 from \"crypto-js/enc-utf8\";\nimport { ENCKEY } from \"../helpers/constant\";\nconst UtilService = {\n  Encrypt,\n  Decrypt,\n  GenerateGUID\n};\n\nfunction Encrypt(data) {\n  let jsondata = JSON.stringify(data);\n  return AES.encrypt(jsondata, ENCKEY);\n}\n\n_c = Encrypt;\n\nfunction Decrypt(encData) {\n  var bytes = AES.decrypt(encData.toString(), ENCKEY);\n  var data = bytes.toString(ENC_UTF8);\n  return JSON.parse(data);\n}\n\n_c2 = Decrypt;\n\nfunction GenerateGUID() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\n_c3 = GenerateGUID;\nexport default UtilService;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Encrypt\");\n$RefreshReg$(_c2, \"Decrypt\");\n$RefreshReg$(_c3, \"GenerateGUID\");","map":{"version":3,"sources":["C:/React/eVideoPrime_Final/src/services/UtilService.js"],"names":["AES","ENC_UTF8","ENCKEY","UtilService","Encrypt","Decrypt","GenerateGUID","data","jsondata","JSON","stringify","encrypt","encData","bytes","decrypt","toString","parse","replace","c","r","Math","random","v"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,eAAhB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,MAAT,QAAwB,qBAAxB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OADgB;AAEhBC,EAAAA,OAFgB;AAGhBC,EAAAA;AAHgB,CAApB;;AAMA,SAASF,OAAT,CAAiBG,IAAjB,EAAuB;AACnB,MAAIC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAf;AACA,SAAOP,GAAG,CAACW,OAAJ,CAAYH,QAAZ,EAAsBN,MAAtB,CAAP;AACH;;KAHQE,O;;AAIT,SAASC,OAAT,CAAiBO,OAAjB,EAA0B;AACtB,MAAIC,KAAK,GAAGb,GAAG,CAACc,OAAJ,CAAYF,OAAO,CAACG,QAAR,EAAZ,EAAgCb,MAAhC,CAAZ;AACA,MAAIK,IAAI,GAAGM,KAAK,CAACE,QAAN,CAAed,QAAf,CAAX;AACA,SAAOQ,IAAI,CAACO,KAAL,CAAWT,IAAX,CAAP;AACH;;MAJQF,O;;AAKT,SAASC,YAAT,GAAwB;AACpB,SAAO,uCAAuCW,OAAvC,CAA+C,OAA/C,EAAwD,UAAUC,CAAV,EAAa;AACxE,QAAIC,CAAC,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,CAA7B;AAAA,QAAgCC,CAAC,GAAGJ,CAAC,IAAI,GAAL,GAAWC,CAAX,GAAgBA,CAAC,GAAG,GAAJ,GAAU,GAA9D;AACA,WAAOG,CAAC,CAACP,QAAF,CAAW,EAAX,CAAP;AACH,GAHM,CAAP;AAIH;;MALQT,Y;AAOT,eAAeH,WAAf","sourcesContent":["import AES from 'crypto-js/aes';\nimport ENC_UTF8 from \"crypto-js/enc-utf8\";\nimport { ENCKEY  } from \"../helpers/constant\";\n\nconst UtilService = {\n    Encrypt,\n    Decrypt,\n    GenerateGUID\n}\n\nfunction Encrypt(data) {\n    let jsondata = JSON.stringify(data);\n    return AES.encrypt(jsondata, ENCKEY);\n}\nfunction Decrypt(encData) {\n    var bytes = AES.decrypt(encData.toString(), ENCKEY);\n    var data = bytes.toString(ENC_UTF8);\n    return JSON.parse(data);\n}\nfunction GenerateGUID() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport default UtilService;\n"]},"metadata":{},"sourceType":"module"}